"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _async = require("async");

const DEFAULT_CONCURRENCY = 5;

class ConcurrentQueue {
  constructor(worker, concurrency) {
    this.worker = worker;
    this.queue = (0, _async.queue)((task, callback) => {
      this.worker(task).then(callback).catch(callback);
    }, concurrency || DEFAULT_CONCURRENCY);

    this.queue.drain = () => {
      if (this.drainResolver) {
        this.drainResolver();
        this.drainResolver = null;
      }
    };
  }

  push(task, handler) {
    this.queue.push(task, handler);
  }

  drain() {
    return new Promise((resolve, reject) => {
      if (this.queue.idle()) {
        resolve();
      } else {
        this.drainResolver = resolve;
      }
    });
  }

}

exports.default = ConcurrentQueue;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tYWluL2NvbmN1cnJlbnQtcXVldWUuanMiXSwibmFtZXMiOlsiREVGQVVMVF9DT05DVVJSRU5DWSIsIkNvbmN1cnJlbnRRdWV1ZSIsImNvbnN0cnVjdG9yIiwid29ya2VyIiwiY29uY3VycmVuY3kiLCJxdWV1ZSIsInRhc2siLCJjYWxsYmFjayIsInRoZW4iLCJjYXRjaCIsImRyYWluIiwiZHJhaW5SZXNvbHZlciIsInB1c2giLCJoYW5kbGVyIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJpZGxlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUEsTUFBTUEsbUJBQW1CLEdBQUcsQ0FBNUI7O0FBRWUsTUFBTUMsZUFBTixDQUFzQjtBQUNuQ0MsRUFBQUEsV0FBVyxDQUFDQyxNQUFELEVBQVNDLFdBQVQsRUFBc0I7QUFDL0IsU0FBS0QsTUFBTCxHQUFjQSxNQUFkO0FBRUEsU0FBS0UsS0FBTCxHQUFhLGtCQUFNLENBQUNDLElBQUQsRUFBT0MsUUFBUCxLQUFvQjtBQUNyQyxXQUFLSixNQUFMLENBQVlHLElBQVosRUFBa0JFLElBQWxCLENBQXVCRCxRQUF2QixFQUFpQ0UsS0FBakMsQ0FBdUNGLFFBQXZDO0FBQ0QsS0FGWSxFQUVWSCxXQUFXLElBQUlKLG1CQUZMLENBQWI7O0FBSUEsU0FBS0ssS0FBTCxDQUFXSyxLQUFYLEdBQW1CLE1BQU07QUFDdkIsVUFBSSxLQUFLQyxhQUFULEVBQXdCO0FBQ3RCLGFBQUtBLGFBQUw7QUFDQSxhQUFLQSxhQUFMLEdBQXFCLElBQXJCO0FBQ0Q7QUFDRixLQUxEO0FBTUQ7O0FBRURDLEVBQUFBLElBQUksQ0FBQ04sSUFBRCxFQUFPTyxPQUFQLEVBQWdCO0FBQ2xCLFNBQUtSLEtBQUwsQ0FBV08sSUFBWCxDQUFnQk4sSUFBaEIsRUFBc0JPLE9BQXRCO0FBQ0Q7O0FBRURILEVBQUFBLEtBQUssR0FBRztBQUNOLFdBQU8sSUFBSUksT0FBSixDQUFZLENBQUNDLE9BQUQsRUFBVUMsTUFBVixLQUFxQjtBQUN0QyxVQUFJLEtBQUtYLEtBQUwsQ0FBV1ksSUFBWCxFQUFKLEVBQXVCO0FBQ3JCRixRQUFBQSxPQUFPO0FBQ1IsT0FGRCxNQUVPO0FBQ0wsYUFBS0osYUFBTCxHQUFxQkksT0FBckI7QUFDRDtBQUNGLEtBTk0sQ0FBUDtBQU9EOztBQTVCa0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3F1ZXVlfSBmcm9tICdhc3luYyc7XG5cbmNvbnN0IERFRkFVTFRfQ09OQ1VSUkVOQ1kgPSA1O1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb25jdXJyZW50UXVldWUge1xuICBjb25zdHJ1Y3Rvcih3b3JrZXIsIGNvbmN1cnJlbmN5KSB7XG4gICAgdGhpcy53b3JrZXIgPSB3b3JrZXI7XG5cbiAgICB0aGlzLnF1ZXVlID0gcXVldWUoKHRhc2ssIGNhbGxiYWNrKSA9PiB7XG4gICAgICB0aGlzLndvcmtlcih0YXNrKS50aGVuKGNhbGxiYWNrKS5jYXRjaChjYWxsYmFjayk7XG4gICAgfSwgY29uY3VycmVuY3kgfHwgREVGQVVMVF9DT05DVVJSRU5DWSk7XG5cbiAgICB0aGlzLnF1ZXVlLmRyYWluID0gKCkgPT4ge1xuICAgICAgaWYgKHRoaXMuZHJhaW5SZXNvbHZlcikge1xuICAgICAgICB0aGlzLmRyYWluUmVzb2x2ZXIoKTtcbiAgICAgICAgdGhpcy5kcmFpblJlc29sdmVyID0gbnVsbDtcbiAgICAgIH1cbiAgICB9O1xuICB9XG5cbiAgcHVzaCh0YXNrLCBoYW5kbGVyKSB7XG4gICAgdGhpcy5xdWV1ZS5wdXNoKHRhc2ssIGhhbmRsZXIpO1xuICB9XG5cbiAgZHJhaW4oKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGlmICh0aGlzLnF1ZXVlLmlkbGUoKSkge1xuICAgICAgICByZXNvbHZlKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmRyYWluUmVzb2x2ZXIgPSByZXNvbHZlO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG4iXX0=