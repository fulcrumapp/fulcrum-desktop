"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _form = _interopRequireDefault(require("./models/form"));

var _choiceList = _interopRequireDefault(require("./models/choice-list"));

var _classificationSet = _interopRequireDefault(require("./models/classification-set"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class LocalDatabaseDataSource {
  constructor(account) {
    this.account = account;
    this.db = account.db;
    this.choiceLists = {};
    this.classificationSets = {};
    this.forms = {};
  }

  async load(db) {
    this.choiceLists = await this.loadObjects(db, _choiceList.default);
    this.classificationSets = await this.loadObjects(db, _classificationSet.default);
    this.forms = await this.loadObjects(db, _form.default);
  }

  async loadObjects(db, type) {
    const objects = await type.findAll(db);
    const map = {};

    for (const object of objects) {
      map[object.id] = object;
    }

    return map;
  }

  getChoiceList(id, callback) {
    return callback(null, this.choiceLists[id]);
  }

  getClassificationSet(id, callback) {
    return callback(null, this.classificationSets[id]);
  }

  getForm(id, callback) {
    return callback(null, this.forms[id]);
  }

}

exports.default = LocalDatabaseDataSource;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tYWluL3NxbGl0ZS1kYXRhLXNvdXJjZS5qcyJdLCJuYW1lcyI6WyJMb2NhbERhdGFiYXNlRGF0YVNvdXJjZSIsImNvbnN0cnVjdG9yIiwiYWNjb3VudCIsImRiIiwiY2hvaWNlTGlzdHMiLCJjbGFzc2lmaWNhdGlvblNldHMiLCJmb3JtcyIsImxvYWQiLCJsb2FkT2JqZWN0cyIsIkNob2ljZUxpc3QiLCJDbGFzc2lmaWNhdGlvblNldCIsIkZvcm0iLCJ0eXBlIiwib2JqZWN0cyIsImZpbmRBbGwiLCJtYXAiLCJvYmplY3QiLCJpZCIsImdldENob2ljZUxpc3QiLCJjYWxsYmFjayIsImdldENsYXNzaWZpY2F0aW9uU2V0IiwiZ2V0Rm9ybSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7O0FBRWUsTUFBTUEsdUJBQU4sQ0FBOEI7QUFDM0NDLEVBQUFBLFdBQVcsQ0FBQ0MsT0FBRCxFQUFVO0FBQ25CLFNBQUtBLE9BQUwsR0FBZUEsT0FBZjtBQUNBLFNBQUtDLEVBQUwsR0FBVUQsT0FBTyxDQUFDQyxFQUFsQjtBQUNBLFNBQUtDLFdBQUwsR0FBbUIsRUFBbkI7QUFDQSxTQUFLQyxrQkFBTCxHQUEwQixFQUExQjtBQUNBLFNBQUtDLEtBQUwsR0FBYSxFQUFiO0FBQ0Q7O0FBRVMsUUFBSkMsSUFBSSxDQUFDSixFQUFELEVBQUs7QUFDYixTQUFLQyxXQUFMLEdBQW1CLE1BQU0sS0FBS0ksV0FBTCxDQUFpQkwsRUFBakIsRUFBcUJNLG1CQUFyQixDQUF6QjtBQUNBLFNBQUtKLGtCQUFMLEdBQTBCLE1BQU0sS0FBS0csV0FBTCxDQUFpQkwsRUFBakIsRUFBcUJPLDBCQUFyQixDQUFoQztBQUNBLFNBQUtKLEtBQUwsR0FBYSxNQUFNLEtBQUtFLFdBQUwsQ0FBaUJMLEVBQWpCLEVBQXFCUSxhQUFyQixDQUFuQjtBQUNEOztBQUVnQixRQUFYSCxXQUFXLENBQUNMLEVBQUQsRUFBS1MsSUFBTCxFQUFXO0FBQzFCLFVBQU1DLE9BQU8sR0FBRyxNQUFNRCxJQUFJLENBQUNFLE9BQUwsQ0FBYVgsRUFBYixDQUF0QjtBQUVBLFVBQU1ZLEdBQUcsR0FBRyxFQUFaOztBQUVBLFNBQUssTUFBTUMsTUFBWCxJQUFxQkgsT0FBckIsRUFBOEI7QUFDNUJFLE1BQUFBLEdBQUcsQ0FBQ0MsTUFBTSxDQUFDQyxFQUFSLENBQUgsR0FBaUJELE1BQWpCO0FBQ0Q7O0FBRUQsV0FBT0QsR0FBUDtBQUNEOztBQUVERyxFQUFBQSxhQUFhLENBQUNELEVBQUQsRUFBS0UsUUFBTCxFQUFlO0FBQzFCLFdBQU9BLFFBQVEsQ0FBQyxJQUFELEVBQU8sS0FBS2YsV0FBTCxDQUFpQmEsRUFBakIsQ0FBUCxDQUFmO0FBQ0Q7O0FBRURHLEVBQUFBLG9CQUFvQixDQUFDSCxFQUFELEVBQUtFLFFBQUwsRUFBZTtBQUNqQyxXQUFPQSxRQUFRLENBQUMsSUFBRCxFQUFPLEtBQUtkLGtCQUFMLENBQXdCWSxFQUF4QixDQUFQLENBQWY7QUFDRDs7QUFFREksRUFBQUEsT0FBTyxDQUFDSixFQUFELEVBQUtFLFFBQUwsRUFBZTtBQUNwQixXQUFPQSxRQUFRLENBQUMsSUFBRCxFQUFPLEtBQUtiLEtBQUwsQ0FBV1csRUFBWCxDQUFQLENBQWY7QUFDRDs7QUFyQzBDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEZvcm0gZnJvbSAnLi9tb2RlbHMvZm9ybSc7XG5pbXBvcnQgQ2hvaWNlTGlzdCBmcm9tICcuL21vZGVscy9jaG9pY2UtbGlzdCc7XG5pbXBvcnQgQ2xhc3NpZmljYXRpb25TZXQgZnJvbSAnLi9tb2RlbHMvY2xhc3NpZmljYXRpb24tc2V0JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTG9jYWxEYXRhYmFzZURhdGFTb3VyY2Uge1xuICBjb25zdHJ1Y3RvcihhY2NvdW50KSB7XG4gICAgdGhpcy5hY2NvdW50ID0gYWNjb3VudDtcbiAgICB0aGlzLmRiID0gYWNjb3VudC5kYjtcbiAgICB0aGlzLmNob2ljZUxpc3RzID0ge307XG4gICAgdGhpcy5jbGFzc2lmaWNhdGlvblNldHMgPSB7fTtcbiAgICB0aGlzLmZvcm1zID0ge307XG4gIH1cblxuICBhc3luYyBsb2FkKGRiKSB7XG4gICAgdGhpcy5jaG9pY2VMaXN0cyA9IGF3YWl0IHRoaXMubG9hZE9iamVjdHMoZGIsIENob2ljZUxpc3QpO1xuICAgIHRoaXMuY2xhc3NpZmljYXRpb25TZXRzID0gYXdhaXQgdGhpcy5sb2FkT2JqZWN0cyhkYiwgQ2xhc3NpZmljYXRpb25TZXQpO1xuICAgIHRoaXMuZm9ybXMgPSBhd2FpdCB0aGlzLmxvYWRPYmplY3RzKGRiLCBGb3JtKTtcbiAgfVxuXG4gIGFzeW5jIGxvYWRPYmplY3RzKGRiLCB0eXBlKSB7XG4gICAgY29uc3Qgb2JqZWN0cyA9IGF3YWl0IHR5cGUuZmluZEFsbChkYik7XG5cbiAgICBjb25zdCBtYXAgPSB7fTtcblxuICAgIGZvciAoY29uc3Qgb2JqZWN0IG9mIG9iamVjdHMpIHtcbiAgICAgIG1hcFtvYmplY3QuaWRdID0gb2JqZWN0O1xuICAgIH1cblxuICAgIHJldHVybiBtYXA7XG4gIH1cblxuICBnZXRDaG9pY2VMaXN0KGlkLCBjYWxsYmFjaykge1xuICAgIHJldHVybiBjYWxsYmFjayhudWxsLCB0aGlzLmNob2ljZUxpc3RzW2lkXSk7XG4gIH1cblxuICBnZXRDbGFzc2lmaWNhdGlvblNldChpZCwgY2FsbGJhY2spIHtcbiAgICByZXR1cm4gY2FsbGJhY2sobnVsbCwgdGhpcy5jbGFzc2lmaWNhdGlvblNldHNbaWRdKTtcbiAgfVxuXG4gIGdldEZvcm0oaWQsIGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIGNhbGxiYWNrKG51bGwsIHRoaXMuZm9ybXNbaWRdKTtcbiAgfVxufVxuXG4iXX0=