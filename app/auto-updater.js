"use strict";

var _electron = require("electron");

var _electronLog = _interopRequireDefault(require("electron-log"));

var _electronUpdater = require("electron-updater");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_electronUpdater.autoUpdater.logger = _electronLog.default;
_electronUpdater.autoUpdater.logger.transports.file.level = 'info';

_electronLog.default.info('Auto-updater starting...');

_electronUpdater.autoUpdater.on('checking-for-update', () => {
  console.log('Checking for update...');
});

_electronUpdater.autoUpdater.on('update-available', (ev, info) => {
  console.log('Update available.');
});

_electronUpdater.autoUpdater.on('update-not-available', (ev, info) => {
  console.log('Update not available.');
});

_electronUpdater.autoUpdater.on('error', (ev, err) => {
  console.log('Error in auto-updater.');
});

_electronUpdater.autoUpdater.on('download-progress', (ev, progressObj) => {
  console.log('Download progress...');
});

_electronUpdater.autoUpdater.on('update-downloaded', (ev, info) => {
  console.log('Update downloaded; will install in 5 seconds');
});

_electronUpdater.autoUpdater.on('update-downloaded', (ev, info) => {
  setTimeout(function () {
    _electronUpdater.autoUpdater.quitAndInstall();
  }, 5000);
});

_electron.app.on('ready', function () {
  if (process.env.DEVELOPMENT) {
    return;
  }

  _electronUpdater.autoUpdater.checkForUpdates();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9hdXRvLXVwZGF0ZXIuanMiXSwibmFtZXMiOlsiYXV0b1VwZGF0ZXIiLCJsb2dnZXIiLCJsb2ciLCJ0cmFuc3BvcnRzIiwiZmlsZSIsImxldmVsIiwiaW5mbyIsIm9uIiwiY29uc29sZSIsImV2IiwiZXJyIiwicHJvZ3Jlc3NPYmoiLCJzZXRUaW1lb3V0IiwicXVpdEFuZEluc3RhbGwiLCJhcHAiLCJwcm9jZXNzIiwiZW52IiwiREVWRUxPUE1FTlQiLCJjaGVja0ZvclVwZGF0ZXMiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQUEsNkJBQVlDLE1BQVosR0FBcUJDLG9CQUFyQjtBQUNBRiw2QkFBWUMsTUFBWixDQUFtQkUsVUFBbkIsQ0FBOEJDLElBQTlCLENBQW1DQyxLQUFuQyxHQUEyQyxNQUEzQzs7QUFFQUgscUJBQUlJLElBQUosQ0FBUywwQkFBVDs7QUFFQU4sNkJBQVlPLEVBQVosQ0FBZSxxQkFBZixFQUFzQyxNQUFNO0FBQzFDQyxFQUFBQSxPQUFPLENBQUNOLEdBQVIsQ0FBWSx3QkFBWjtBQUNELENBRkQ7O0FBSUFGLDZCQUFZTyxFQUFaLENBQWUsa0JBQWYsRUFBbUMsQ0FBQ0UsRUFBRCxFQUFLSCxJQUFMLEtBQWM7QUFDL0NFLEVBQUFBLE9BQU8sQ0FBQ04sR0FBUixDQUFZLG1CQUFaO0FBQ0QsQ0FGRDs7QUFJQUYsNkJBQVlPLEVBQVosQ0FBZSxzQkFBZixFQUF1QyxDQUFDRSxFQUFELEVBQUtILElBQUwsS0FBYztBQUNuREUsRUFBQUEsT0FBTyxDQUFDTixHQUFSLENBQVksdUJBQVo7QUFDRCxDQUZEOztBQUlBRiw2QkFBWU8sRUFBWixDQUFlLE9BQWYsRUFBd0IsQ0FBQ0UsRUFBRCxFQUFLQyxHQUFMLEtBQWE7QUFDbkNGLEVBQUFBLE9BQU8sQ0FBQ04sR0FBUixDQUFZLHdCQUFaO0FBQ0QsQ0FGRDs7QUFJQUYsNkJBQVlPLEVBQVosQ0FBZSxtQkFBZixFQUFvQyxDQUFDRSxFQUFELEVBQUtFLFdBQUwsS0FBcUI7QUFDdkRILEVBQUFBLE9BQU8sQ0FBQ04sR0FBUixDQUFZLHNCQUFaO0FBQ0QsQ0FGRDs7QUFJQUYsNkJBQVlPLEVBQVosQ0FBZSxtQkFBZixFQUFvQyxDQUFDRSxFQUFELEVBQUtILElBQUwsS0FBYztBQUNoREUsRUFBQUEsT0FBTyxDQUFDTixHQUFSLENBQVksOENBQVo7QUFDRCxDQUZEOztBQUlBRiw2QkFBWU8sRUFBWixDQUFlLG1CQUFmLEVBQW9DLENBQUNFLEVBQUQsRUFBS0gsSUFBTCxLQUFjO0FBQ2hETSxFQUFBQSxVQUFVLENBQUMsWUFBVztBQUNwQlosaUNBQVlhLGNBQVo7QUFDRCxHQUZTLEVBRVAsSUFGTyxDQUFWO0FBR0QsQ0FKRDs7QUFNQUMsY0FBSVAsRUFBSixDQUFPLE9BQVAsRUFBZ0IsWUFBVztBQUN6QixNQUFJUSxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsV0FBaEIsRUFBNkI7QUFDM0I7QUFDRDs7QUFFRGpCLCtCQUFZa0IsZUFBWjtBQUNELENBTkQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhcHAgfSBmcm9tICdlbGVjdHJvbic7XG5pbXBvcnQgbG9nIGZyb20gJ2VsZWN0cm9uLWxvZyc7XG5pbXBvcnQgeyBhdXRvVXBkYXRlciB9IGZyb20gJ2VsZWN0cm9uLXVwZGF0ZXInO1xuXG5hdXRvVXBkYXRlci5sb2dnZXIgPSBsb2c7XG5hdXRvVXBkYXRlci5sb2dnZXIudHJhbnNwb3J0cy5maWxlLmxldmVsID0gJ2luZm8nO1xuXG5sb2cuaW5mbygnQXV0by11cGRhdGVyIHN0YXJ0aW5nLi4uJyk7XG5cbmF1dG9VcGRhdGVyLm9uKCdjaGVja2luZy1mb3ItdXBkYXRlJywgKCkgPT4ge1xuICBjb25zb2xlLmxvZygnQ2hlY2tpbmcgZm9yIHVwZGF0ZS4uLicpO1xufSk7XG5cbmF1dG9VcGRhdGVyLm9uKCd1cGRhdGUtYXZhaWxhYmxlJywgKGV2LCBpbmZvKSA9PiB7XG4gIGNvbnNvbGUubG9nKCdVcGRhdGUgYXZhaWxhYmxlLicpO1xufSk7XG5cbmF1dG9VcGRhdGVyLm9uKCd1cGRhdGUtbm90LWF2YWlsYWJsZScsIChldiwgaW5mbykgPT4ge1xuICBjb25zb2xlLmxvZygnVXBkYXRlIG5vdCBhdmFpbGFibGUuJyk7XG59KTtcblxuYXV0b1VwZGF0ZXIub24oJ2Vycm9yJywgKGV2LCBlcnIpID0+IHtcbiAgY29uc29sZS5sb2coJ0Vycm9yIGluIGF1dG8tdXBkYXRlci4nKTtcbn0pO1xuXG5hdXRvVXBkYXRlci5vbignZG93bmxvYWQtcHJvZ3Jlc3MnLCAoZXYsIHByb2dyZXNzT2JqKSA9PiB7XG4gIGNvbnNvbGUubG9nKCdEb3dubG9hZCBwcm9ncmVzcy4uLicpO1xufSk7XG5cbmF1dG9VcGRhdGVyLm9uKCd1cGRhdGUtZG93bmxvYWRlZCcsIChldiwgaW5mbykgPT4ge1xuICBjb25zb2xlLmxvZygnVXBkYXRlIGRvd25sb2FkZWQ7IHdpbGwgaW5zdGFsbCBpbiA1IHNlY29uZHMnKTtcbn0pO1xuXG5hdXRvVXBkYXRlci5vbigndXBkYXRlLWRvd25sb2FkZWQnLCAoZXYsIGluZm8pID0+IHtcbiAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICBhdXRvVXBkYXRlci5xdWl0QW5kSW5zdGFsbCgpO1xuICB9LCA1MDAwKTtcbn0pO1xuXG5hcHAub24oJ3JlYWR5JywgZnVuY3Rpb24oKSB7XG4gIGlmIChwcm9jZXNzLmVudi5ERVZFTE9QTUVOVCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGF1dG9VcGRhdGVyLmNoZWNrRm9yVXBkYXRlcygpO1xufSk7XG4iXX0=