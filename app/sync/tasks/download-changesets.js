"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _downloadQuerySequence = _interopRequireDefault(require("./download-query-sequence"));

var _changeset = _interopRequireDefault(require("../../models/changeset"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class DownloadChangesets extends _downloadQuerySequence.default {
  get resourceName() {
    return 'changesets';
  }

  get typeName() {
    return 'changeset';
  }

  get lastSync() {
    return this.account._lastSyncChangesets;
  }

  get useRestAPI() {
    return false;
  }

  findOrCreate(database, attributes) {
    return _changeset.default.findOrCreate(database, {
      account_id: this.account.rowID,
      resource_id: attributes.id
    });
  }

  async loadObject(object, attributes) {
    await this.lookup(object, attributes.form_id, '_formRowID', 'getForm');
    await this.lookup(object, attributes.closed_by_id, '_closedByRowID', 'getUser');
    await this.lookup(object, attributes.created_by_id, '_createdByRowID', 'getUser');
    this.account._lastSyncChangesets = object._updatedAt;
  }

  attributesForQueryRow(row) {
    return {
      id: row[0],
      created_at: row[1],
      updated_at: row[2],
      closed_at: row[3],
      metadata: row[4] && JSON.parse(row[4]),
      min_lat: row[5],
      max_lat: row[6],
      min_lon: row[7],
      max_lon: row[8],
      number_of_changes: row[9],
      number_created: row[10],
      number_updated: row[11],
      number_deleted: row[12],
      form_id: row[13],
      created_by_id: row[14],
      updated_by_id: row[15],
      closed_by_id: row[16],
      created_by: row[17],
      updated_by: row[18],
      closed_by: row[19]
    };
  }

  generateQuery(sequence, limit) {
    const sequenceString = new Date(+sequence).toISOString();
    return `
SELECT
  "changeset_id" AS "id",
  to_char(pg_catalog.timezone('UTC', "records"."created_at"), 'YYYY-MM-DD"T"HH24:MI:SS"Z"') AS "created_at",
  to_char(pg_catalog.timezone('UTC', "records"."updated_at"), 'YYYY-MM-DD"T"HH24:MI:SS"Z"') AS "updated_at",
  to_char(pg_catalog.timezone('UTC', "records"."closed_at"), 'YYYY-MM-DD"T"HH24:MI:SS"Z"') AS "closed_at",
  "metadata" AS "metadata",
  "min_lat" AS min_lat,
  "max_lat" AS max_lat,
  "min_lon" AS min_lon,
  "max_lon" AS max_lon,
  "number_of_changes" AS number_of_changes,
  "number_of_creates" AS number_created,
  "number_of_updates" AS number_updated,
  "number_of_deletes" AS number_deleted,
  "form_id" AS form_id,
  "created_by_id" AS "created_by_id",
  "updated_by_id" AS "updated_by_id",
  "closed_by_id" AS "closed_by_id",
  NULL AS "created_by",
  NULL AS "updated_by",
  NULL AS "closed_by"
FROM "changesets" AS "records"
WHERE
  "records".updated_at > '${sequenceString}'
ORDER BY
  "records".updated_at ASC
LIMIT ${limit} OFFSET 0
`;
  }

}

exports.default = DownloadChangesets;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zeW5jL3Rhc2tzL2Rvd25sb2FkLWNoYW5nZXNldHMuanMiXSwibmFtZXMiOlsiRG93bmxvYWRDaGFuZ2VzZXRzIiwiRG93bmxvYWRRdWVyeVNlcXVlbmNlIiwicmVzb3VyY2VOYW1lIiwidHlwZU5hbWUiLCJsYXN0U3luYyIsImFjY291bnQiLCJfbGFzdFN5bmNDaGFuZ2VzZXRzIiwidXNlUmVzdEFQSSIsImZpbmRPckNyZWF0ZSIsImRhdGFiYXNlIiwiYXR0cmlidXRlcyIsIkNoYW5nZXNldCIsImFjY291bnRfaWQiLCJyb3dJRCIsInJlc291cmNlX2lkIiwiaWQiLCJsb2FkT2JqZWN0Iiwib2JqZWN0IiwibG9va3VwIiwiZm9ybV9pZCIsImNsb3NlZF9ieV9pZCIsImNyZWF0ZWRfYnlfaWQiLCJfdXBkYXRlZEF0IiwiYXR0cmlidXRlc0ZvclF1ZXJ5Um93Iiwicm93IiwiY3JlYXRlZF9hdCIsInVwZGF0ZWRfYXQiLCJjbG9zZWRfYXQiLCJtZXRhZGF0YSIsIkpTT04iLCJwYXJzZSIsIm1pbl9sYXQiLCJtYXhfbGF0IiwibWluX2xvbiIsIm1heF9sb24iLCJudW1iZXJfb2ZfY2hhbmdlcyIsIm51bWJlcl9jcmVhdGVkIiwibnVtYmVyX3VwZGF0ZWQiLCJudW1iZXJfZGVsZXRlZCIsInVwZGF0ZWRfYnlfaWQiLCJjcmVhdGVkX2J5IiwidXBkYXRlZF9ieSIsImNsb3NlZF9ieSIsImdlbmVyYXRlUXVlcnkiLCJzZXF1ZW5jZSIsImxpbWl0Iiwic2VxdWVuY2VTdHJpbmciLCJEYXRlIiwidG9JU09TdHJpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQUVlLE1BQU1BLGtCQUFOLFNBQWlDQyw4QkFBakMsQ0FBdUQ7QUFDcEQsTUFBWkMsWUFBWSxHQUFHO0FBQ2pCLFdBQU8sWUFBUDtBQUNEOztBQUVXLE1BQVJDLFFBQVEsR0FBRztBQUNiLFdBQU8sV0FBUDtBQUNEOztBQUVXLE1BQVJDLFFBQVEsR0FBRztBQUNi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QUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QkYsY0FBZTtBQUMzQztBQUNBO0FBQ0EsUUFBUUQsS0FBTTtBQUNkLENBNUJJO0FBNkJEOztBQXRGbUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRG93bmxvYWRRdWVyeVNlcXVlbmNlIGZyb20gJy4vZG93bmxvYWQtcXVlcnktc2VxdWVuY2UnO1xuaW1wb3J0IENoYW5nZXNldCBmcm9tICcuLi8uLi9tb2RlbHMvY2hhbmdlc2V0JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRG93bmxvYWRDaGFuZ2VzZXRzIGV4dGVuZHMgRG93bmxvYWRRdWVyeVNlcXVlbmNlIHtcbiAgZ2V0IHJlc291cmNlTmFtZSgpIHtcbiAgICByZXR1cm4gJ2NoYW5nZXNldHMnO1xuICB9XG5cbiAgZ2V0IHR5cGVOYW1lKCkge1xuICAgIHJldHVybiAnY2hhbmdlc2V0JztcbiAgfVxuXG4gIGdldCBsYXN0U3luYygpIHtcbiAgICByZXR1cm4gdGhpcy5hY2NvdW50Ll9sYXN0U3luY0NoYW5nZXNldHM7XG4gIH1cblxuICBnZXQgdXNlUmVzdEFQSSgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBmaW5kT3JDcmVhdGUoZGF0YWJhc2UsIGF0dHJpYnV0ZXMpIHtcbiAgICByZXR1cm4gQ2hhbmdlc2V0LmZpbmRPckNyZWF0ZShkYXRhYmFzZSwge2FjY291bnRfaWQ6IHRoaXMuYWNjb3VudC5yb3dJRCwgcmVzb3VyY2VfaWQ6IGF0dHJpYnV0ZXMuaWR9KTtcbiAgfVxuXG4gIGFzeW5jIGxvYWRPYmplY3Qob2JqZWN0LCBhdHRyaWJ1dGVzKSB7XG4gICAgYXdhaXQgdGhpcy5sb29rdXAob2JqZWN0LCBhdHRyaWJ1dGVzLmZvcm1faWQsICdfZm9ybVJvd0lEJywgJ2dldEZvcm0nKTtcbiAgICBhd2FpdCB0aGlzLmxvb2t1cChvYmplY3QsIGF0dHJpYnV0ZXMuY2xvc2VkX2J5X2lkLCAnX2Nsb3NlZEJ5Um93SUQnLCAnZ2V0VXNlcicpO1xuICAgIGF3YWl0IHRoaXMubG9va3VwKG9iamVjdCwgYXR0cmlidXRlcy5jcmVhdGVkX2J5X2lkLCAnX2NyZWF0ZWRCeVJvd0lEJywgJ2dldFVzZXInKTtcblxuICAgIHRoaXMuYWNjb3VudC5fbGFzdFN5bmNDaGFuZ2VzZXRzID0gb2JqZWN0Ll91cGRhdGVkQXQ7XG4gIH1cblxuICBhdHRyaWJ1dGVzRm9yUXVlcnlSb3cocm93KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlkOiByb3dbMF0sXG4gICAgICBjcmVhdGVkX2F0OiByb3dbMV0sXG4gICAgICB1cGRhdGVkX2F0OiByb3dbMl0sXG4gICAgICBjbG9zZWRfYXQ6IHJvd1szXSxcbiAgICAgIG1ldGFkYXRhOiByb3dbNF0gJiYgSlNPTi5wYXJzZShyb3dbNF0pLFxuICAgICAgbWluX2xhdDogcm93WzVdLFxuICAgICAgbWF4X2xhdDogcm93WzZdLFxuICAgICAgbWluX2xvbjogcm93WzddLFxuICAgICAgbWF4X2xvbjogcm93WzhdLFxuICAgICAgbnVtYmVyX29mX2NoYW5nZXM6IHJvd1s5XSxcbiAgICAgIG51bWJlcl9jcmVhdGVkOiByb3dbMTBdLFxuICAgICAgbnVtYmVyX3VwZGF0ZWQ6IHJvd1sxMV0sXG4gICAgICBudW1iZXJfZGVsZXRlZDogcm93WzEyXSxcbiAgICAgIGZvcm1faWQ6IHJvd1sxM10sXG4gICAgICBjcmVhdGVkX2J5X2lkOiByb3dbMTRdLFxuICAgICAgdXBkYXRlZF9ieV9pZDogcm93WzE1XSxcbiAgICAgIGNsb3NlZF9ieV9pZDogcm93WzE2XSxcbiAgICAgIGNyZWF0ZWRfYnk6IHJvd1sxN10sXG4gICAgICB1cGRhdGVkX2J5OiByb3dbMThdLFxuICAgICAgY2xvc2VkX2J5OiByb3dbMTldXG4gICAgfTtcbiAgfVxuXG4gIGdlbmVyYXRlUXVlcnkoc2VxdWVuY2UsIGxpbWl0KSB7XG4gICAgY29uc3Qgc2VxdWVuY2VTdHJpbmcgPSBuZXcgRGF0ZSgrc2VxdWVuY2UpLnRvSVNPU3RyaW5nKCk7XG5cbiAgICByZXR1cm4gYFxuU0VMRUNUXG4gIFwiY2hhbmdlc2V0X2lkXCIgQVMgXCJpZFwiLFxuICB0b19jaGFyKHBnX2NhdGFsb2cudGltZXpvbmUoJ1VUQycsIFwicmVjb3Jkc1wiLlwiY3JlYXRlZF9hdFwiKSwgJ1lZWVktTU0tRERcIlRcIkhIMjQ6TUk6U1NcIlpcIicpIEFTIFwiY3JlYXRlZF9hdFwiLFxuICB0b19jaGFyKHBnX2NhdGFsb2cudGltZXpvbmUoJ1VUQycsIFwicmVjb3Jkc1wiLlwidXBkYXRlZF9hdFwiKSwgJ1lZWVktTU0tRERcIlRcIkhIMjQ6TUk6U1NcIlpcIicpIEFTIFwidXBkYXRlZF9hdFwiLFxuICB0b19jaGFyKHBnX2NhdGFsb2cudGltZXpvbmUoJ1VUQycsIFwicmVjb3Jkc1wiLlwiY2xvc2VkX2F0XCIpLCAnWVlZWS1NTS1ERFwiVFwiSEgyNDpNSTpTU1wiWlwiJykgQVMgXCJjbG9zZWRfYXRcIixcbiAgXCJtZXRhZGF0YVwiIEFTIFwibWV0YWRhdGFcIixcbiAgXCJtaW5fbGF0XCIgQVMgbWluX2xhdCxcbiAgXCJtYXhfbGF0XCIgQVMgbWF4X2xhdCxcbiAgXCJtaW5fbG9uXCIgQVMgbWluX2xvbixcbiAgXCJtYXhfbG9uXCIgQVMgbWF4X2xvbixcbiAgXCJudW1iZXJfb2ZfY2hhbmdlc1wiIEFTIG51bWJlcl9vZl9jaGFuZ2VzLFxuICBcIm51bWJlcl9vZl9jcmVhdGVzXCIgQVMgbnVtYmVyX2NyZWF0ZWQsXG4gIFwibnVtYmVyX29mX3VwZGF0ZXNcIiBBUyBudW1iZXJfdXBkYXRlZCxcbiAgXCJudW1iZXJfb2ZfZGVsZXRlc1wiIEFTIG51bWJlcl9kZWxldGVkLFxuICBcImZvcm1faWRcIiBBUyBmb3JtX2lkLFxuICBcImNyZWF0ZWRfYnlfaWRcIiBBUyBcImNyZWF0ZWRfYnlfaWRcIixcbiAgXCJ1cGRhdGVkX2J5X2lkXCIgQVMgXCJ1cGRhdGVkX2J5X2lkXCIsXG4gIFwiY2xvc2VkX2J5X2lkXCIgQVMgXCJjbG9zZWRfYnlfaWRcIixcbiAgTlVMTCBBUyBcImNyZWF0ZWRfYnlcIixcbiAgTlVMTCBBUyBcInVwZGF0ZWRfYnlcIixcbiAgTlVMTCBBUyBcImNsb3NlZF9ieVwiXG5GUk9NIFwiY2hhbmdlc2V0c1wiIEFTIFwicmVjb3Jkc1wiXG5XSEVSRVxuICBcInJlY29yZHNcIi51cGRhdGVkX2F0ID4gJyR7c2VxdWVuY2VTdHJpbmd9J1xuT1JERVIgQllcbiAgXCJyZWNvcmRzXCIudXBkYXRlZF9hdCBBU0NcbkxJTUlUICR7bGltaXR9IE9GRlNFVCAwXG5gO1xuICB9XG59XG4iXX0=