"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = execute;

var _child_process = require("child_process");

function execute(command, options = {}, logPrefix = 'execute') {
  if (options == null) {
    options = {};
  }

  const env = { ...process.env,
    ...options.env,
    ELECTRON_RUN_AS_NODE: 1
  };
  return new Promise((resolve, reject) => {
    try {
      const child = (0, _child_process.exec)(command, { ...options,
        env
      });

      const stdoutWrite = data => {
        process.stdout.write(logPrefix.green + ' ' + data.toString());
      };

      const stderrWrite = data => {
        process.stderr.write(logPrefix.red + ' ' + data.toString());
      };

      stdoutWrite(command + '\n');
      child.stdout.on('data', stdoutWrite);
      child.stderr.on('data', stderrWrite);
      child.on('exit', resolve);
    } catch (ex) {
      reject(ex);
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9leGVjLmpzIl0sIm5hbWVzIjpbImV4ZWN1dGUiLCJjb21tYW5kIiwib3B0aW9ucyIsImxvZ1ByZWZpeCIsImVudiIsInByb2Nlc3MiLCJFTEVDVFJPTl9SVU5fQVNfTk9ERSIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiY2hpbGQiLCJzdGRvdXRXcml0ZSIsImRhdGEiLCJzdGRvdXQiLCJ3cml0ZSIsImdyZWVuIiwidG9TdHJpbmciLCJzdGRlcnJXcml0ZSIsInN0ZGVyciIsInJlZCIsIm9uIiwiZXgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFZSxTQUFTQSxPQUFULENBQWlCQyxPQUFqQixFQUEwQkMsT0FBTyxHQUFHLEVBQXBDLEVBQXdDQyxTQUFTLEdBQUcsU0FBcEQsRUFBK0Q7QUFDNUUsTUFBSUQsT0FBTyxJQUFJLElBQWYsRUFBcUI7QUFDbkJBLElBQUFBLE9BQU8sR0FBRyxFQUFWO0FBQ0Q7O0FBRUQsUUFBTUUsR0FBRyxHQUFHLEVBQ1YsR0FBR0MsT0FBTyxDQUFDRCxHQUREO0FBRVYsT0FBR0YsT0FBTyxDQUFDRSxHQUZEO0FBR1ZFLElBQUFBLG9CQUFvQixFQUFFO0FBSFosR0FBWjtBQU1BLFNBQU8sSUFBSUMsT0FBSixDQUFZLENBQUNDLE9BQUQsRUFBVUMsTUFBVixLQUFxQjtBQUN0QyxRQUFJO0FBQ0YsWUFBTUMsS0FBSyxHQUFHLHlCQUFLVCxPQUFMLEVBQWMsRUFBQyxHQUFHQyxPQUFKO0FBQWFFLFFBQUFBO0FBQWIsT0FBZCxDQUFkOztBQUVBLFlBQU1PLFdBQVcsR0FBSUMsSUFBRCxJQUFVO0FBQzVCUCxRQUFBQSxPQUFPLENBQUNRLE1BQVIsQ0FBZUMsS0FBZixDQUFxQlgsU0FBUyxDQUFDWSxLQUFWLEdBQWtCLEdBQWxCLEdBQXdCSCxJQUFJLENBQUNJLFFBQUwsRUFBN0M7QUFDRCxPQUZEOztBQUlBLFlBQU1DLFdBQVcsR0FBSUwsSUFBRCxJQUFVO0FBQzVCUCxRQUFBQSxPQUFPLENBQUNhLE1BQVIsQ0FBZUosS0FBZixDQUFxQlgsU0FBUyxDQUFDZ0IsR0FBVixHQUFnQixHQUFoQixHQUFzQlAsSUFBSSxDQUFDSSxRQUFMLEVBQTNDO0FBQ0QsT0FGRDs7QUFJQUwsTUFBQUEsV0FBVyxDQUFDVixPQUFPLEdBQUcsSUFBWCxDQUFYO0FBRUFTLE1BQUFBLEtBQUssQ0FBQ0csTUFBTixDQUFhTyxFQUFiLENBQWdCLE1BQWhCLEVBQXdCVCxXQUF4QjtBQUNBRCxNQUFBQSxLQUFLLENBQUNRLE1BQU4sQ0FBYUUsRUFBYixDQUFnQixNQUFoQixFQUF3QkgsV0FBeEI7QUFFQVAsTUFBQUEsS0FBSyxDQUFDVSxFQUFOLENBQVMsTUFBVCxFQUFpQlosT0FBakI7QUFDRCxLQWpCRCxDQWlCRSxPQUFPYSxFQUFQLEVBQVc7QUFDWFosTUFBQUEsTUFBTSxDQUFDWSxFQUFELENBQU47QUFDRDtBQUNGLEdBckJNLENBQVA7QUFzQkQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2V4ZWN9IGZyb20gJ2NoaWxkX3Byb2Nlc3MnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBleGVjdXRlKGNvbW1hbmQsIG9wdGlvbnMgPSB7fSwgbG9nUHJlZml4ID0gJ2V4ZWN1dGUnKSB7XG4gIGlmIChvcHRpb25zID09IG51bGwpIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICBjb25zdCBlbnYgPSB7XG4gICAgLi4ucHJvY2Vzcy5lbnYsXG4gICAgLi4ub3B0aW9ucy5lbnYsXG4gICAgRUxFQ1RST05fUlVOX0FTX05PREU6IDFcbiAgfTtcblxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBjaGlsZCA9IGV4ZWMoY29tbWFuZCwgey4uLm9wdGlvbnMsIGVudn0pO1xuXG4gICAgICBjb25zdCBzdGRvdXRXcml0ZSA9IChkYXRhKSA9PiB7XG4gICAgICAgIHByb2Nlc3Muc3Rkb3V0LndyaXRlKGxvZ1ByZWZpeC5ncmVlbiArICcgJyArIGRhdGEudG9TdHJpbmcoKSk7XG4gICAgICB9O1xuXG4gICAgICBjb25zdCBzdGRlcnJXcml0ZSA9IChkYXRhKSA9PiB7XG4gICAgICAgIHByb2Nlc3Muc3RkZXJyLndyaXRlKGxvZ1ByZWZpeC5yZWQgKyAnICcgKyBkYXRhLnRvU3RyaW5nKCkpO1xuICAgICAgfTtcblxuICAgICAgc3Rkb3V0V3JpdGUoY29tbWFuZCArICdcXG4nKTtcblxuICAgICAgY2hpbGQuc3Rkb3V0Lm9uKCdkYXRhJywgc3Rkb3V0V3JpdGUpO1xuICAgICAgY2hpbGQuc3RkZXJyLm9uKCdkYXRhJywgc3RkZXJyV3JpdGUpO1xuXG4gICAgICBjaGlsZC5vbignZXhpdCcsIHJlc29sdmUpO1xuICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICByZWplY3QoZXgpO1xuICAgIH1cbiAgfSk7XG59XG4iXX0=